#!/usr/bin/python

import logging as log
import sys

from optparse import OptionParser
parser = OptionParser(usage='%prog host')
parser.add_option('-p', '--persist', action='store_true', dest='persist', help='try re-connecting until success')
parser.add_option('-l', '--list-hosts', action='store_true', dest='list_hosts', help='do not connect anywhere, just list known hosts')
(optz, argz) = parser.parse_args()

if not argz and not optz.list_hosts:
	log.error('No host specified')
	sys.exit(1)

from string import whitespace as spaces
import re, os

hosts = dict([(host, (ip, suffix)) for ip,fqhn,suffix,host in re.findall('([\d.:]+).*?(\S\.(\w+))?\s+([^\s.]+)\s*$', open('/etc/hosts').read(), re.M)])
for line in open(os.path.expanduser('~/.cFG/host_list')).readlines():
	alias,link = line.strip(spaces).split(' ', 1)
	try: host,suffix = alias.rsplit('.', 1)
	except ValueError: host,suffix = alias,None
	hosts[host] = link,suffix

if optz.list_hosts:
	sys.stdout.write(' '.join(hosts.keys()))
	sys.exit()

auth = dict([tuple(line.strip(spaces).split(' ', 1)) for line in open(os.path.expanduser('~/.cFG/host_auth')).readlines()])

for host,(link,suffix) in hosts.iteritems():
	try: hosts[host] = link, auth[suffix]
	except KeyError: hosts[host] = link, None

try: host,auth = hosts[argz[0]]
except KeyError:
	log.error('Unknown host specified')
	sys.exit(1)

from subprocess import Popen as exe
while 1:
	err = exe(
		['/usr/bin/ssh', '-Y', '%s@%s'%(auth,host) if auth else host],
		stdin=sys.stdin, stdout=sys.stdout, stderr=sys.stderr
	).wait()
	if not (optz.persist and err): break
