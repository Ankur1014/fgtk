#!/bin/bash

step=15
opts=( -acodec copy -vn )

[[ -z "$1" || -z "$2" || "$1" = -h || "$1" = --help ]] && {
	cmd=$(basename "$0")
	echo >&2 "Usage: $cmd file-to-split.mp3 prefix [ chunk-len-in-minutes ] [ ffmpeg opts ]"
	echo >&2 "Example: $cmd some-long-book.mp3 slb"
	echo >&2 "  Resulting files will be: slb-001.mp3 slb-002.mp3 ..."
	echo >&2 "  Default length: $step minutes"
	echo >&2 "  Default ffmpeg opts (only good for audio files!): ${opts[@]}"
	echo >&2 "  Special ffmpeg opts (must be before others, if any, only one at a time):"
	echo >&2 "    -: don't pass any"
	echo >&2 "    -v: -c copy -bsf:a aac_adtstoasc"
	exit 1
}

set -e -o pipefail
step=$(( $step * 60 ))
src=$1 prefix=$2
shift; shift
[[ -z "$1" ]] || { step=$1; shift; }


if [[ $# -ge 1 ]]
then
	opts=( "$@" )
	[[ "${opts[0]}" != - ]] || opts=( "${opts[@]:1}" )
	[[ "${opts[0]}" != -v ]] || opts=( -c copy -bsf:a aac_adtstoasc "${opts[@]:1}" )
fi

len=$( ffprobe "$src" 2>&1 |
	awk 'match($0,/Duration: (\S+)\./,a) {split(a[1],b,":");print b[1]*3600+b[2]*60+b[3]}' )
[[ -n "$len" && "$len" -gt 0 ]] || { echo >&2 "ERROR: Failed to get source duration"; exit 1; }
ext=${src##*.}

n=1
ns=$(( ($len / $step) + 1 ))

while [[ $n -le $ns ]]; do
	s=$(( ($n-1) * $step ))
	e=$(( $n * $step ))
	dst="${prefix}-$(printf '%03d' $n).${ext}"

	echo "---- $dst [$n/$ns, $s-$e]"

	ffmpeg -loglevel warning -y -i "$src" "${opts[@]}" -ss $s -to $e "$dst"
	(( n += 1 ))
done

:
